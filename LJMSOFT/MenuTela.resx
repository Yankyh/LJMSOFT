<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>