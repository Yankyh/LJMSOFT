<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>